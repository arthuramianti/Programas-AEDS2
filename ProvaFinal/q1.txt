------Arthur Mendes Amianti------     MATRICULA: 655938

QUESTAO 1:
	public void setFilhoFolha(char c){
		for (Celula i = primeiro.prox; i != null; i = i.prox) {
           		if(i.elemento == c){
                		i.no.folha = true;
                		i = ultimo;
            		}
		}
    	}

    	public void inserir(String elemento) throws Exception {
        	inserir(elemento, raiz, 0);
    	}

    	private void inserir(String elemento, No no, int i) throws Exception {
        	No filho = no.pesquisar(elemento.charAt(i));

        	if(filho == null){
            		System.out.print("*****CRIANDO FILHO******");
            		filho = no.inserir(elemento.charAt(i));

            		if(i == elemento.length() - 1){
                		System.out.print("(folha)");
                		no.setFilhoFolha(elemento.charAt(i));
            	}else{
                	inserir(elemento, filho, i + 1);
            	}

        	} else if (filho.folha == false && i < elemento.length() - 1){
            		inserir(elemento, filho, i + 1);

        	} else {
            		throw new Exception("ERRO");
        	} 
    	}

	public No pesquisar(char x){
		No resp = null;
		for (Celula i = primeiro.prox; i != null; i = i.prox) {
        		if(i.elemento == x){
            			resp = i.no;
            			i = ultimo;
         		}
		}
		return resp;
	}

	
ANALISE DE COMPLEXIDADE:
	MELHOR CASO:  O(1) na pesquisa quando a lista estiver vazia   +  O(1) na inserçao se filho == null quando quisermos inserir apenas uma letra.

	PIOR CASO:    O(TAM) (sendo TAM = a quantidade de elementos na lista) na pesquisa quando o elemento nao for encontrado e para inserçao é O(n) (n sendo o tamanhao da arvore, para 
total construçao dela.






